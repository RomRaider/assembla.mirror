Steve Wadsworth (lizzardo on RomRaider forum)

This file is an attempt to consolidate available information on setting up, building,
and packaging RomRaider.  All instructions assume a Windows environment and the use
of Eclipse for development.  Apologies for the Windows-centricity, but some of the
tools inherited from the RomRaider project are Windows-based.

----------------------------------------------
Setting up the project (from romraider.com)

As an open source project, RomRaider depends on Java developers like you for
enhancements, bug fixes and general maintenance. This page is meant to be a
guide to setting up a development environment from scratch. The guide was
originally written by Tgui in this thread and has been adapted and revised.

RomRaider’s official IDE is Eclipse. You are free to use any Java IDE you
choose, but due to the extremely simple process of setting up the environment
and the power of Eclipse, it’s probably your best choice.

    * Installing Eclipse and Subclipse
          o Install the latest version of the Java Development Kit
          o Get and Install Eclipse JDT for your platform
          o Install Subclipse for Subversion (SVN) integration, following the
              steps outlined in #3 below.
    * Setting up the RomRaider project
          o Open the Java perspective in Eclipse by clicking
              Window > Open Perspective > Java
          o Right click in the package explorer and select “Import…”
          o Select “Checkout Projects from SVN” and click “Next”
          o Select “Use a new repository location:” and click “Next”
          o Enter “https://svn2.assembla.com/svn/romraider” and click “Next”
          o Highlight “trunk” in the folder tree and click “Next”
          o Name the project “romraider” and click “Finish”

    * Setting the library path 
          o You may need to change the path to the Jars within your
          	libs dir (ex: Linux). See Note #1 below or you should read this
          	to set the Build Paths: 
			http://help.eclipse.org/indigo/topic/org.eclipse.jdt.doc.user/reference/ref-properties-build-path.htm

    * Building the Project for the First Time 
          o First complete a build using ant. Right-click on build.xml and
            select Run As -> 2 Ant build then select all in the targets tab.
            More info in Note #4 below.
          o When the build is finished (successfully I hope), Right-click on
            the root romraider project and select Refresh. This should clear
            all the errors and warnings you may have seen.

----------------------------------------------

Notes on the above:

1)  Make sure the build path for the Java builder is set correctly.  On the top menu:

        Project -> Properties -> Java Build Path

    On the Source tab, the default output folder should be set to

        romraider/build/classes

2)  The jars in the java build path mentioned above should be correct in the SVN
    repository for a Windows environment.

3)  A command line Subversion client needs to be installed and available in the default
    path.  To verify this, open a command prompt and run 
    
        svn info https://svn2.assembla.com/svn/romraider
        
    You should get a response of the form
    
        Path: romraider
        URL: https://svn2.assembla.com/svn/romraider
        Repository Root: https://svn2.assembla.com/svn/romraider
        Repository UUID: 38686702-15cf-42e4-a595-3071df8bf5ea
        Revision: 78
        Node Kind: directory
        Last Changed Author: kascade
        Last Changed Rev: 78
        Last Changed Date: 2008-05-02 15:50:23 -0700 (Fri, 02 May 2008)

    If this does not work correctly, the ant build will fail.

4) 	The ant build file is in the main directory and uses the default name of
  	"build.xml".

	The Java builder is set as the default.  During development it's convenient to have
	the "Problems" pane show warning and errors.  The ant build does not send warnings
	or errors there.  The ant build is primarily for automation of the complete build
	process for packaging.
	
	To build using ant, right-click on the build.xml
	file in the Package Explorer (Java perspective) and select
	
	Run As -> 2 Ant build, then select "all" in the targets tab. To get more verbose
	output from ant set the -v option in the arguments field on the Main tab.
	
	The "help" target lists available targets with a brief description of each.
	
	The "all" target does just that.  It rebuilds everything, finishing with the installers.




